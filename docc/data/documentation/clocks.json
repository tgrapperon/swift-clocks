{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Clock"},{"type":"text","text":" protocol in provides a powerful abstraction for time-based asynchrony in Swiftâ€™s"},{"type":"text","text":" "},{"type":"text","text":"structured concurrency. With just a single "},{"type":"codeVoice","code":"sleep"},{"type":"text","text":" method you can express many powerful async"},{"type":"text","text":" "},{"type":"text","text":"operators, such as timers, "},{"type":"codeVoice","code":"debounce"},{"type":"text","text":", "},{"type":"codeVoice","code":"throttle"},{"type":"text","text":", "},{"type":"codeVoice","code":"timeout"},{"type":"text","text":" and more (see"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/apple\/swift-async-algorithms"},{"type":"text","text":")."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, the moment you use a concrete clock in your asynchronous code, or use "},{"type":"codeVoice","code":"Task.sleep"},{"type":"text","text":" "},{"type":"text","text":"directly, you instantly lose the ability to easily test and preview your features, forcing you to"},{"type":"text","text":" "},{"type":"text","text":"wait for real world time to pass to see how your feature works."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This library provides new "},{"type":"codeVoice","code":"Clock"},{"type":"text","text":" conformances ("},{"type":"codeVoice","code":"TestClock"},{"type":"text","text":", "},{"type":"codeVoice","code":"ImmediateClock"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"UnimplementedClock"},{"type":"text","text":") that allow you to turn any time-based asynchronous code into something that"},{"type":"text","text":" "},{"type":"text","text":"is easier to test and debug."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/clocks"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Clocks\/documentation\/Clocks","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A few clocks that make working with Swift concurrency more testable and more versatile."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Clocks","title":"Clocks","symbolKind":"module","role":"collection","modules":[{"name":"Clocks"}]},"hierarchy":{"paths":[[]]},"references":{"doc://Clocks/documentation/Clocks":{"role":"collection","title":"Clocks","abstract":[{"type":"text","text":"A few clocks that make working with Swift concurrency more testable and more versatile."}],"identifier":"doc:\/\/Clocks\/documentation\/Clocks","kind":"symbol","type":"topic","url":"\/documentation\/clocks"},"http://github.com/apple/swift-async-algorithms":{"title":"swift-async-algorithms","titleInlineContent":[{"type":"text","text":"swift-async-algorithms"}],"type":"link","identifier":"http:\/\/github.com\/apple\/swift-async-algorithms","url":"http:\/\/github.com\/apple\/swift-async-algorithms"}}}