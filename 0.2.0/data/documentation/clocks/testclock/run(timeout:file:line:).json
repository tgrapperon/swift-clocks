{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":" = .milliseconds(500), "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The amount of time to allow for all work on the clock to finish."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is useful for letting a clock run to its end without having to explicitly account"},{"type":"text","text":" "},{"type":"text","text":"for each sleep. For example, suppose you have a feature that runs a timer for 10 ticks, and"},{"type":"text","text":" "},{"type":"text","text":"each tick it increments a counter. If you don’t want to worry about advancing the timer for"},{"type":"text","text":" "},{"type":"text","text":"each tick, you can instead just "},{"type":"codeVoice","code":"run"},{"type":"text","text":" the clock out:"}]},{"type":"codeListing","syntax":"swift","code":["func testTimer() async {","  let clock = TestClock()","  let model = FeatureModel(clock: clock)","","  XCTAssertEqual(model.count, 0)","  model.startTimerButtonTapped()","","  await clock.run()","  XCTAssertEqual(model.count, 10)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to run a clock that never finishes, hence causing a suspension that never"},{"type":"text","text":" "},{"type":"text","text":"finishes. This can happen if you create an unbounded timer. In order to prevent holding up"},{"type":"text","text":" "},{"type":"text","text":"your test suite forever, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Clocks\/documentation\/Clocks\/TestClock\/run(timeout:file:line:)"},{"type":"text","text":" method will terminate and cause a"},{"type":"text","text":" "},{"type":"text","text":"test failure if a timeout duration is reached."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/clocks\/testclock\/run(timeout:file:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Clocks\/documentation\/Clocks\/TestClock\/run(timeout:file:line:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Runs the clock until it has no scheduled sleeps left."}],"kind":"symbol","metadata":{"role":"symbol","title":"run(timeout:file:line:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"symbolKind":"method","externalID":"s:6Clocks9TestClockC3run7timeout4file4lineys8DurationV_s12StaticStringVSutYaF","modules":[{"name":"Clocks"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"16.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"13.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"16.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"9.0","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/Clocks\/documentation\/Clocks","doc:\/\/Clocks\/documentation\/Clocks\/TestClock"]]},"seeAlsoSections":[{"title":"Controlling time","identifiers":["doc:\/\/Clocks\/documentation\/Clocks\/TestClock\/advance(by:)","doc:\/\/Clocks\/documentation\/Clocks\/TestClock\/advance(to:)"],"generated":true}],"references":{"doc://Clocks/documentation/Clocks":{"role":"collection","title":"Clocks","abstract":[{"type":"text","text":"A few clocks that make working with Swift concurrency more testable and more versatile."}],"identifier":"doc:\/\/Clocks\/documentation\/Clocks","kind":"symbol","type":"topic","url":"\/documentation\/clocks"},"doc://Clocks/documentation/Clocks/TestClock/run(timeout:file:line:)":{"role":"symbol","title":"run(timeout:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Runs the clock until it has no scheduled sleeps left."}],"identifier":"doc:\/\/Clocks\/documentation\/Clocks\/TestClock\/run(timeout:file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/clocks\/testclock\/run(timeout:file:line:)"},"doc://Clocks/documentation/Clocks/TestClock":{"role":"symbol","title":"TestClock","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestClock"}],"abstract":[{"type":"text","text":"A clock whose time can be controlled in a deterministic manner."}],"identifier":"doc:\/\/Clocks\/documentation\/Clocks\/TestClock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestClock"}],"url":"\/documentation\/clocks\/testclock"},"doc://Clocks/documentation/Clocks/TestClock/advance(to:)":{"role":"symbol","title":"advance(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advance"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TestClock","preciseIdentifier":"s:6Clocks9TestClockC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Instant","preciseIdentifier":"s:6Clocks9TestClockC7InstantV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Advances the test clock’s internal time to the deadline."}],"identifier":"doc:\/\/Clocks\/documentation\/Clocks\/TestClock\/advance(to:)","kind":"symbol","type":"topic","url":"\/documentation\/clocks\/testclock\/advance(to:)"},"doc://Clocks/documentation/Clocks/TestClock/advance(by:)":{"role":"symbol","title":"advance(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advance"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Advances the test clock’s internal time by the duration."}],"identifier":"doc:\/\/Clocks\/documentation\/Clocks\/TestClock\/advance(by:)","kind":"symbol","type":"topic","url":"\/documentation\/clocks\/testclock\/advance(by:)"}}}